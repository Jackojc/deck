#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

rm deck.asm

cat "core/core.asm" >> deck.asm
cat "core/builtins.asm" >> deck.asm
cat "core/sys.asm" >> deck.asm

echo "; BEGIN PROGRAM ;" >> deck.asm
echo "___header" >> deck.asm

cat - <(cat "core/prelude.dk") | sed "s/#!.*//g" | tr -s '[:space:]' '\n' | \
while read -r word; do
	if [[ "$word" =~ ^[[:digit:]]+$ ]] ; then
		sed 's/^/___push /' <<< "$word"

	elif [[ "$word" =~ ^\&\.[[:graph:]]+$ ]] ; then
		printf '%s' "${word:2}" | xxd -p | sed 's/^/___push .d_/'

	elif [[ "$word" =~ ^\&[[:graph:]]+$ ]] ; then
		printf '%s' "${word:1}" | xxd -p | sed 's/^/___push d_/'

	elif [[ "$word" =~ ^@\.[[:graph:]]+$ ]] ; then
		printf '%s' "${word:2}" | xxd -p | sed 's/^/___label .d_/'

	elif [[ "$word" =~ ^@[[:graph:]]+$ ]] ; then
		printf '%s' "${word:1}" | xxd -p | sed 's/^/___label d_/'

	elif [[ "$word" =~ ^\.[[:graph:]]+$ ]] ; then
		printf '%s' "${word}" | xxd -p | sed 's/^/___call .d_/'

	elif [[ "$word" =~ ^(here|go)$ ]] ; then
		printf '%s\n' "${word}" | sed 's/^/___/'

	elif [[ "$word" =~ ^[[:graph:]]+$ ]] ; then
		printf '%s' "${word}" | xxd -p | sed 's/^/___call d_/'

	fi
done >> deck.asm

nasm -O3 -felf64 deck.asm -o deck.o
ld -o deck deck.o -s -n --gc-sections

