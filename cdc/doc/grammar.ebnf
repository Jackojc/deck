literal ::= number | string
builtin ::= ? ident ?
function ::= '[' expr* ']'

assertion ::= '$' '(' typename ')'
fn-type ::= 'fn' '(' typename* '->' typename* ')'
typename ::= 'int' | 'string' | 'any' | fn-type

swizzle ::= '(' ident+ '->' ident* ')'

expr ::=
	literal |
	builtin |
	function |
	assertion |
	swizzle

program ::= expression*
